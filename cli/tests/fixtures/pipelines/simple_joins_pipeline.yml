---
version:  1.1
kind: component
name: test-pipeline
tags: [native]
run:
  kind: dag
  concurrency: 2
  operations:
    - name: job1
      dagRef: job-template
      params:
        bucket: {value: "s3://foo"}
    - name: job2
      dagRef: job-template
      params:
        bucket: {value: "s3://bar"}
    - name: experiment1
      dagRef: experiment-template
    - name: experiment2
      dagRef: experiment-template
    - name: reduce
      dagRef: reduce-template
      joins:
        - {query: "hub.name: job-template", params: {buckets: {value: "artifacts.bucket"}}}
        - {query: "hub.name: experiment-template", params: {losses: {value: "outputs.loss"}}}
  components:
    - name: reduce-template
      description: dummy operation to reduce over several artifacts and loss metrics
      tags: [tag1]
      inputs:
      - name: buckets
        type: s3
        isList: true
      - name: losses
        type: float
        isList: true
      hooks:
      - hubRef: component-hook-ref
        connection: "succeeded"
      run:
        kind: job
        container:
          image: test
          resources: {requests: {memory: 1024}}
    - name: experiment-template
      description: experiment to predict something
      tags: [tag1]
      inputs:
        - name: lr
          type: float
          value: 0.1
          isOptional: true
        - name: loss
          type: str
          value: MSE
          isOptional: true
      termination:
        maxRetries: 2
      run:
        kind: job
        environment:
          nodeSelector: {polyaxon: experiments}
          serviceAccountName: service
          imagePullSecrets: [secret1, secret2]
        container:
          image: test
          resources: {requests: {memory: 1024}}
    - name: job-template
      description: job to process something
      tags: [tag2]
      inputs:
      - name: bucket
        type: s3
      termination:
        maxRetries: 2
      run:
        kind: job
        environment:
          nodeSelector: {polyaxon: experiments}
          serviceAccountName: service
          imagePullSecrets: [secret1, secret2]
        container:
          image: test
          resources: {requests: {cpu: 1}}
